Swaroop
29/5/2018 - Mitch


1. Who are you and what are you working on?
   1. We are building EthVigil an API gateway to to help developers build apps on blockchain without worrying about nodes or RPC calls. We take any smart contract and turn it into a REST interface. Use a modified ERC20 token (and a hacked Remix IDE). So you don’t have to worry about encoding it, filling out strings, etc. Deploy it to a testnet. Even take care of issues that could occur on the blockchain.
   2. Once it’s deployed it’s like a Swagger API, make all the Get calls, etc. Any web developer can see how it works. Setting up private keys, all that signing, all that stuff is taken care of (custodian feature). All you need is an API key, abstracts away some of the pain.
   3. Demoed minting some tokens. EthVigil goes deeper and will investigate if transactions will fail. Any web developer can use it upfront. Can add integrations, their system monitors the whole blockchain for events, can get notifications on Slack/email.
1. How do you handle testing?
   1. Basic unit tests, integration testing. So much of the codebase that keeps changing so difficult to stay on top of testing, but have must stricter tests on mainnet. At the moment don’t have external auditing.
1. What are the tools/libraries/frameworks you use?
   1. Mostly custom tools. Started with web3, started with Truffle but was running into a lot trouble using them so rolled their own.
1. What tools don’t exist at the moment?
   1. Web3 is a library to make it easier for a lot of developers in the space. But we use JSON RPC calls directly, don’t want to abstract on top of this so don’t want to get anything in between this. Had some issues with web3py.
   2. Recommend that our customers use Truffle, Ganache, etc.
1. What was the hardest part about learning to develop with Ethereum?
   1. The first thing I built was a tool that looks for any ERC20 transfer automatically. Built in one month. Not just writing code but understanding the Ethereum paradigm. But I’m not a finance guy or trader so wasn’t super excited about this.
   2. Current error codes are not that useful. Getting a response back saying 0x from JSON RPC for some very weird reasons, but doesn’t handle errors in a great way. Better error codes. Wanted to jokingly call themselve the 0x company but it was already taken.
   3. Lack of documentation, but it has improved a lot..
   4. Dealing with the clients themselves, not using Infura. When you use clients directly and bypass Infura it can be painful to get things running.
   5. There’s no flow at all really. I would randomly learn a bunch of things but nothing flowed together. I bought Ether but didn’t need it to actually build on the blockchain. Ropsten was down all the time. Did our stuff on other Testnets. 
   6. Maybe we need to have a flow of learning the fundamentals. It’s all out there but it’s not connected.
1. What are the best educational resources?
   1. Barely anything with tutorials when they got started. He gave his cofounder a crash course in a couple days, and then his cofounder went off and did a self-study. Some good videos were out there (Udemy?)  that they bought. But the best thing is to do it on your own, especially because they are operating on a lower level.
   2. Recommend to go to Ethereum main’s website but not friendly enough for beginner to intermediate developer. But this is a paradigm change, completely different way of doing things. Have to educate the developers.
1. What are you most excited about in the short term?
   1. We built a platform to help people use blockchain but people don’t know what they can build on blockchain. We think Digital Assets are the next big thing, CryptoKitties are the first step in showing the world what they can do.
   2. They are setting up their company in the old way, but can do stuff on Ethereum. Writing stock on the blockchain could be a gamechanger. Document signing.
   3. I hope the scaling issue will be solved soon.